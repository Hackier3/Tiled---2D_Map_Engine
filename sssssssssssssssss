[1mdiff --git a/gunmen.cpp b/gunmen.cpp[m
[1mindex 0fa409d..34ee7a8 100644[m
[1m--- a/gunmen.cpp[m
[1m+++ b/gunmen.cpp[m
[36m@@ -11,7 +11,7 @@[m [mint main()[m
     sf::RenderWindow window(sf::VideoMode({ 1200, 1000 }), "My window", sf::Style::Close);[m
     sf::Texture playerTexture;[m
 	playerTexture.loadFromFile("resources/graphics/BODY_skeleton.png");[m
[31m-    World world(&playerTexture, window);[m
[32m+[m[32m    World& world = World::getInstance(&playerTexture, window);[m
 [m
     sf::Clock clock;[m
     window.setFramerateLimit(150);[m
[1mdiff --git a/hdr/Animation.h b/hdr/Animation.h[m
[1mindex 87689b5..0370449 100644[m
[1m--- a/hdr/Animation.h[m
[1m+++ b/hdr/Animation.h[m
[36m@@ -1,22 +1,26 @@[m
 ﻿#pragma once // Zabezpieczenie przed wielokrotnym dołączeniem[m
 [m
 #include <SFML/Graphics.hpp>[m
[32m+[m[32m#include "map.h"[m
[32m+[m[32m#include "World.h"[m
 [m
 class Animation {[m
 public:[m
[32m+[m[32m    friend class Player;[m
     Animation(sf::Texture* texture, sf::Vector2u imageCount, float switchTime);[m
     ~Animation();[m
 [m
[31m-    void Update(int row, float deltaTime, bool faceRight);[m
[31m-    void SetCurrentImageColumn(unsigned int xSetter);[m
     unsigned int GetCurrentImageColumn();[m
     unsigned int GetImageCountColumn();[m
[31m-    sf::IntRect uvRect;[m
[31m-[m
[32m+[m[32m    sf::IntRect uvRect; // dana reprezentujaca klatke animacji[m
 [m
 private:[m
     sf::Vector2u imageCount;[m
     sf::Vector2u currentImage;[m
     float totalTime;[m
     float switchTime;[m
[32m+[m
[32m+[m[32m    void UpdateCharacter(int row, float deltaTime, bool faceRight);[m
[32m+[m[32m    void UpdateTileInLayer(World& world, float deltaTime);[m
[32m+[m[32m    void SetCurrentImageColumn(unsigned int xSetter);[m
 };[m
[1mdiff --git a/hdr/World.h b/hdr/World.h[m
[1mindex 6d26a7d..4c1a3ee 100644[m
[1m--- a/hdr/World.h[m
[1m+++ b/hdr/World.h[m
[36m@@ -1,19 +1,22 @@[m
[31m-#pragma once[m
[31m-#include <iostream>[m
[31m-#include <vector>[m
[32m+[m[32m﻿#pragma once[m
 #include <SFML/Graphics.hpp>[m
[31m-#include "Map.h"[m
[32m+[m[32m#include <vector>[m
 #include "Player.h"[m
[32m+[m[32m#include "Map.h"[m
[32m+[m
[32m+[m[32mclass Player;[m
 [m
 class World[m
 {[m
 public:[m
[31m-    World(sf::Texture* playerTexture, sf::RenderWindow& window);[m
[32m+[m[32m    friend class Animation;[m
[32m+[m[32m    static World& getInstance(sf::Texture* playerTexture, sf::RenderWindow& window);[m
     ~World();[m
 [m
     void Update(float deltaTime);[m
 [m
 private:[m
[32m+[m[32m    static World* instance;[m
     float deltaTime;[m
     std::vector<Map> maps;[m
     Player player;[m
[36m@@ -22,6 +25,11 @@[m [mprivate:[m
     float viewWidth;[m
     float viewHeight;[m
 [m
[32m+[m[32m    World(sf::Texture* playerTexture, sf::RenderWindow& window);[m
     void Draw();[m
     void CenterView();[m
[31m-};[m
\ No newline at end of file[m
[32m+[m
[32m+[m[32m    // Usuwamy możliwość kopiowania i przypisywania[m
[32m+[m[32m    World(const World&) = delete;[m
[32m+[m[32m    World& operator=(const World&) = delete;[m
[32m+[m[32m};[m
[1mdiff --git a/hdr/map.h b/hdr/map.h[m
[1mindex f28f052..8fd69a9 100644[m
[1m--- a/hdr/map.h[m
[1m+++ b/hdr/map.h[m
[36m@@ -81,6 +81,14 @@[m [mprivate:[m
 		Map* parent;[m
 		Layer(Map* parent) : parent(parent) {}[m
 [m
[32m+[m		[32mstruct AnimatedTile {[m
[32m+[m			[32mint ID;[m
[32m+[m			[32mint x;[m
[32m+[m			[32mint y;[m
[32m+[m			[32mint recentTile = 0;[m
[32m+[m			[32mstd::vector<std::tuple<int, int, int>> allFramesInfo; // { ID klatki, czas trwania klatki, pozostaly czas do zmiany klatki }[m
[32m+[m		[32m};[m
[32m+[m
 		short int id;[m
 		int width;[m
 		int height;[m
[36m@@ -88,8 +96,10 @@[m [mprivate:[m
 		std::vector<TileInfo> tiles; // Kafelki na warstwie z informacjami o flipach[m
 		sf::RenderTexture canvasTexture;[m
 		sf::Sprite sprite; // Sprite dla warstwy[m
[32m+[m		[32mstd::vector<AnimatedTile> animatedTiles;[m
 [m
 		void createLayerSprite();[m
[32m+[m		[32mvoid setAnimatedTiles();[m
 	};[m
 [m
 	std::vector<std::unique_ptr<Layer>> layers;[m
[36m@@ -105,6 +115,7 @@[m [mprivate:[m
 [m
 public:[m
 	friend class World;[m
[32m+[m	[32mfriend class Animation;[m
 	Map(std::string mapPath);[m
 	Map(Map&&) = default;[m
 	Map& operator=(Map&&) = default;[m
[1mdiff --git a/int/gunmen/x64/Debug/Animation.obj b/int/gunmen/x64/Debug/Animation.obj[m
[1mindex bdf43fd..abdfc2e 100644[m
Binary files a/int/gunmen/x64/Debug/Animation.obj and b/int/gunmen/x64/Debug/Animation.obj differ
[1mdiff --git a/int/gunmen/x64/Debug/Player.obj b/int/gunmen/x64/Debug/Player.obj[m
[1mindex 77df20c..d2c7aa1 100644[m
Binary files a/int/gunmen/x64/Debug/Player.obj and b/int/gunmen/x64/Debug/Player.obj differ
[1mdiff --git a/int/gunmen/x64/Debug/World.obj b/int/gunmen/x64/Debug/World.obj[m
[1mindex e467e0d..4b399aa 100644[m
Binary files a/int/gunmen/x64/Debug/World.obj and b/int/gunmen/x64/Debug/World.obj differ
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.ilk b/int/gunmen/x64/Debug/gunmen.ilk[m
[1mindex 9a7d392..36e2c0b 100644[m
Binary files a/int/gunmen/x64/Debug/gunmen.ilk and b/int/gunmen/x64/Debug/gunmen.ilk differ
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.log b/int/gunmen/x64/Debug/gunmen.log[m
[1mindex 52faf80..edecfd1 100644[m
[1m--- a/int/gunmen/x64/Debug/gunmen.log[m
[1m+++ b/int/gunmen/x64/Debug/gunmen.log[m
[36m@@ -1,13 +1,32 @@[m
 ﻿  gunmen.cpp[m
[31m-  Map.cpp[m
[31m-C:\Users\filip\source\repos\gunmen\src\Map.cpp(271,44): warning C4267: "=": konwersja z "size_t" do "int", możliwa utrata danych[m
[31m-C:\Users\filip\source\repos\gunmen\src\Map.cpp(311,20): warning C4244: "inicjowanie": konwersja z "double" do "int", możliwa utrata danych[m
[31m-C:\Users\filip\source\repos\gunmen\src\Map.cpp(312,23): warning C4244: "inicjowanie": konwersja z "double" do "int", możliwa utrata danych[m
[31m-C:\Users\filip\source\repos\gunmen\src\Map.cpp(320,62): warning C4244: "argument": konwersja z "int" do "float", możliwa utrata danych[m
[31m-C:\Users\filip\source\repos\gunmen\src\Map.cpp(320,35): warning C4244: "argument": konwersja z "int" do "float", możliwa utrata danych[m
[32m+[m[32m  Animation.cpp[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\hdr\World.h(22,12): error C2079: "World::player" używa niezdefiniowanego class "Player"[m
[32m+[m[32m  (kompilowanie pliku źródłowego „gunmen.cpp”)[m
[32m+[m[41m  [m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\hdr\Player.h(16,12): error C2079: "Player::animation" używa niezdefiniowanego class "Animation"[m
[32m+[m[32m  (kompilowanie pliku źródłowego „src/Animation.cpp”)[m
[32m+[m[41m  [m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(10,31): warning C4244: "=": konwersja z "float" do "T", możliwa utrata danych[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(10,31): warning C4244:         with[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(10,31): warning C4244:         [[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(10,31): warning C4244:             T=int[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(10,31): warning C4244:         ][m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(11,32): warning C4244: "=": konwersja z "float" do "T", możliwa utrata danych[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(11,32): warning C4244:         with[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(11,32): warning C4244:         [[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(11,32): warning C4244:             T=int[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Animation.cpp(11,32): warning C4244:         ][m
[32m+[m[32m  Player.cpp[m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\hdr\Player.h(16,12): error C2079: "Player::animation" używa niezdefiniowanego class "Animation"[m
[32m+[m[32m  (kompilowanie pliku źródłowego „src/Player.cpp”)[m
[32m+[m[41m  [m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Player.cpp(8,11): error C2440: "inicjowanie": nie można konwertować z "initializer list" na "int"[m
[32m+[m[32m      C:\Users\filip\source\repos\gunmen\src\Player.cpp(8,11):[m
[32m+[m[32m      Inicjator zawiera zbyt wiele elementów[m
[32m+[m[41m  [m
[32m+[m[32mC:\Users\filip\source\repos\gunmen\src\Player.cpp(8,11): error C2439: „Player::animation”: Nie można zainicjować składowej[m
[32m+[m[32m      C:\Users\filip\source\repos\gunmen\hdr\Player.h(16,12):[m
[32m+[m[32m      zobacz deklarację „Player::animation”[m
[32m+[m[41m  [m
   World.cpp[m
   Generowanie kodu...[m
[31m-     Trwa tworzenie biblioteki C:\Users\filip\source\repos\gunmen\out\x64\Debug\gunmen.lib i obiektu C:\Users\filip\source\repos\gunmen\out\x64\Debug\gunmen.exp[m
[31m-  gunmen.vcxproj -> C:\Users\filip\source\repos\gunmen\out\x64\Debug\gunmen.exe[m
[31m-  'pwsh.exe' is not recognized as an internal or external command,[m
[31m-  operable program or batch file.[m
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.obj b/int/gunmen/x64/Debug/gunmen.obj[m
[1mindex 280c474..adac9ab 100644[m
Binary files a/int/gunmen/x64/Debug/gunmen.obj and b/int/gunmen/x64/Debug/gunmen.obj differ
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.tlog/CL.command.1.tlog b/int/gunmen/x64/Debug/gunmen.tlog/CL.command.1.tlog[m
[1mindex 1b6c27d..31e1b0b 100644[m
Binary files a/int/gunmen/x64/Debug/gunmen.tlog/CL.command.1.tlog and b/int/gunmen/x64/Debug/gunmen.tlog/CL.command.1.tlog differ
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.tlog/CL.read.1.tlog b/int/gunmen/x64/Debug/gunmen.tlog/CL.read.1.tlog[m
[1mindex 6aff7bd..9e8363b 100644[m
Binary files a/int/gunmen/x64/Debug/gunmen.tlog/CL.read.1.tlog and b/int/gunmen/x64/Debug/gunmen.tlog/CL.read.1.tlog differ
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.tlog/CL.write.1.tlog b/int/gunmen/x64/Debug/gunmen.tlog/CL.write.1.tlog[m
[1mindex 5639d25..03ee80a 100644[m
Binary files a/int/gunmen/x64/Debug/gunmen.tlog/CL.write.1.tlog and b/int/gunmen/x64/Debug/gunmen.tlog/CL.write.1.tlog differ
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.tlog/gunmen.write.1u.tlog b/int/gunmen/x64/Debug/gunmen.tlog/gunmen.write.1u.tlog[m
[1mindex 26ba28c..5e696da 100644[m
Binary files a/int/gunmen/x64/Debug/gunmen.tlog/gunmen.write.1u.tlog and b/int/gunmen/x64/Debug/gunmen.tlog/gunmen.write.1u.tlog differ
[1mdiff --git a/int/gunmen/x64/Debug/gunmen.tlog/unsuccessfulbuild b/int/gunmen/x64/Debug/gunmen.tlog/unsuccessfulbuild[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/int/gunmen/x64/Debug/map.obj b/int/gunmen/x64/Debug/map.obj[m
[1mindex 56be881..e1b259a 100644[m
Binary files a/int/gunmen/x64/Debug/map.obj and b/int/gunmen/x64/Debug/map.obj differ
[1mdiff --git a/int/gunmen/x64/Debug/vc143.idb b/int/gunmen/x64/Debug/vc143.idb[m
[1mindex a075d11..632f872 100644[m
Binary files a/int/gunmen/x64/Debug/vc143.idb and b/int/gunmen/x64/Debug/vc143.idb differ
[1mdiff --git a/int/gunmen/x64/Debug/vc143.pdb b/int/gunmen/x64/Debug/vc143.pdb[m
[1mindex 39ba97a..9b203c9 100644[m
Binary files a/int/gunmen/x64/Debug/vc143.pdb and b/int/gunmen/x64/Debug/vc143.pdb differ
[1mdiff --git a/src/Animation.cpp b/src/Animation.cpp[m
[1mindex cb5dd93..032946a 100644[m
[1m--- a/src/Animation.cpp[m
[1m+++ b/src/Animation.cpp[m
[36m@@ -11,15 +11,12 @@[m [mAnimation::Animation(sf::Texture* texture, sf::Vector2u imageCount, float switch[m
 	uvRect.height = textureSize.y / float(imageCount.y);[m
 }[m
 [m
[31m-Animation::~Animation() {[m
[31m-}[m
[31m-[m
[31m-void Animation::Update(int row, float deltaTime, bool faceRight){[m
[32m+[m[32mvoid Animation::UpdateCharacter(int row, float deltaTime, bool faceRight){[m
 	currentImage.y = row;[m
 	totalTime += deltaTime;[m
 [m
 	if (totalTime >= switchTime){[m
[31m-		totalTime -= switchTime;[m
[32m+[m		[32mtotalTime = 0;[m
 		currentImage.x++;[m
 [m
 		if (currentImage.x >= imageCount.x){[m
[36m@@ -39,6 +36,16 @@[m [mvoid Animation::Update(int row, float deltaTime, bool faceRight){[m
 	}[m
 }[m
 [m
[32m+[m[32mvoid Animation::UpdateTileInLayer(World& world, float deltaTime) {[m
[32m+[m	[32mfor (auto& map : world.maps) {[m
[32m+[m		[32mfor (auto& layer : map.layers) {[m
[32m+[m			[32mfor (auto& tile : layer->animatedTiles) {[m
[32m+[m[41m				[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
 void Animation::SetCurrentImageColumn(unsigned int xSetter) {[m
 	currentImage.x = xSetter;[m
 }[m
[36m@@ -49,4 +56,7 @@[m [munsigned int Animation::GetCurrentImageColumn() {[m
 [m
 unsigned int Animation::GetImageCountColumn() {[m
 	return imageCount.x;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mAnimation::~Animation() {[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/Player.cpp b/src/Player.cpp[m
[1mindex ae95bc4..9d84e82 100644[m
[1m--- a/src/Player.cpp[m
[1m+++ b/src/Player.cpp[m
[36m@@ -52,7 +52,7 @@[m [mvoid Player::Update(float deltaTime) {[m
 	}[m
 [m
 	if (moving) {[m
[31m-		animation.Update(row, deltaTime, faceRight);[m
[32m+[m		[32manimation.UpdateCharacter(row, deltaTime, faceRight);[m
 	}[m
 	else {[m
 		static float timeSinceLastChange = 0.0f;[m
[36m@@ -68,7 +68,7 @@[m [mvoid Player::Update(float deltaTime) {[m
 			}[m
 [m
 			timeSinceLastChange = 0.0f; // Resetowanie czasu po zmianie klatki[m
[31m-			animation.Update(row, 0, faceRight);[m
[32m+[m			[32manimation.UpdateCharacter(row, 0, faceRight);[m
 		}[m
 	}[m
 [m
[1mdiff --git a/src/World.cpp b/src/World.cpp[m
[1mindex 01e5c2c..0ecc7ce 100644[m
[1m--- a/src/World.cpp[m
[1m+++ b/src/World.cpp[m
[36m@@ -1,8 +1,17 @@[m
 ﻿#include "../hdr/World.h"[m
 [m
[32m+[m[32mWorld* World::instance = nullptr;[m
[32m+[m
[32m+[m[32mWorld& World::getInstance(sf::Texture* playerTexture, sf::RenderWindow& window) {[m
[32m+[m[32m    if (!instance) {[m
[32m+[m[32m        instance = new World(playerTexture, window);[m
[32m+[m[32m    }[m
[32m+[m[32m    return *instance;[m
[32m+[m[32m}[m
[32m+[m
 World::World(sf::Texture* playerTexture, sf::RenderWindow& window)[m
     : window(window),[m
[31m-    player(playerTexture, sf::Vector2u(9, 3), 0.1f, 150.0f)  // Tymczasowa inicjalizacja player[m
[32m+[m[32m    player(playerTexture, sf::Vector2u(9, 3), 0.1f, 150.0f)[m
 {[m
     float windowRatio = float(window.getSize().x) / float(window.getSize().y);[m
     this->viewHeight = 700;[m
[36m@@ -33,5 +42,4 @@[m [mvoid World::CenterView() {[m
     window.setView(view);[m
 }[m
 [m
[31m-World::~World() {[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32mWorld::~World() {}[m
\ No newline at end of file[m
[1mdiff --git a/src/map.cpp b/src/map.cpp[m
[1mindex f21103b..e3a96e1 100644[m
[1m--- a/src/map.cpp[m
[1m+++ b/src/map.cpp[m
[36m@@ -33,6 +33,7 @@[m [mMap::Map(std::string mapPath)[m
 [m
     for (auto& layer : layers) {[m
         layer->createLayerSprite();[m
[32m+[m[32m        layer->setAnimatedTiles();[m
     }[m
 }[m
 [m
[36m@@ -325,6 +326,22 @@[m [mvoid Map::Layer::createLayerSprite() {[m
     sprite.setTexture(canvasTexture.getTexture());[m
 }[m
 [m
[32m+[m[32mvoid Map::Layer::setAnimatedTiles() {[m
[32m+[m[32m    for (auto& tile : tiles) {[m
[32m+[m[32m        if (tile.tile.animation.size() != 0) {[m
[32m+[m[32m            AnimatedTile animatedTile;[m
[32m+[m[32m            animatedTile.x = tile.x;[m
[32m+[m[32m            animatedTile.y = tile.y;[m
[32m+[m[32m            animatedTile.ID = tile.tile.ID;[m
[32m+[m
[32m+[m[32m            for (const auto& frame : tile.tile.animation) {[m
[32m+[m[32m                animatedTile.allFramesInfo.push_back(std::make_tuple(frame.first, frame.second, frame.second));[m
[32m+[m[32m            }[m
[32m+[m[32m            this->animatedTiles.push_back(animatedTile);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
 void Map::drawUnderground(sf::RenderWindow& window) {[m
     for (size_t i = 0; i < layers.size() - 2; i++) {[m
         window.draw(layers[i]->sprite);[m
